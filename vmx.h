#ifndef __VMX_H
#define __VMX_H

int vmx_run(void);
int vmx_deinit(void);

// VMX_BASIC
#define VMX_BASIC_TRUE_CTLS (1ULL << 55)

// VM_ENTRY
#define VM_ENTRY_IA32E_MODE 0x00000200

// VM_EXIT
#define VM_EXIT_HOST_ADDR_SPACE_SIZE    0x00000200
#define VM_EXIT_ASK_INTR_ON_EXIT        0x00008000

// CPU based
#define CPU_BASED_HLT_EXITING                   0x00000080
#define CPU_BASED_ACTIVATE_ESCONDARY_CONTROLS   0x80000000

enum vmcs_field {
    PIN_BASED_VM_EXEC_CONTROL   = 0x00004000,
    CPU_BASED_VM_EXEC_CONTROL   = 0x00004002,
    VM_EXIT_CONTROLS            = 0x0000400c,
    VM_ENTRY_CONTROLS           = 0x00004012,
    SECONDARY_VM_EXEC_CONTROL   = 0x0000401e,
    VM_EXIT_MSR_STORE_COUNT     = 0x0000400e,
    VM_EXIT_MSR_STORE_ADDR      = 0x00002006,
    VM_EXIT_MSR_LOAD_COUNT      = 0x00004010,
    VM_EXIT_MSR_LOAD_ADDR       = 0x00002008,
    VM_ENTRY_MSR_LOAD_COUNT     = 0x00004014,
    VM_ENTRY_INTR_INFO_FIELD    = 0x00004016,

    PAGE_FAULT_ERROR_CODE_MASK  = 0x00004006,
    PAGE_FAULT_ERROR_CODE_MATCH = 0x00004008,
    CR3_TARGET_COUNT            = 0x0000400a,
    VMCS_LINK_POINTER           = 0x00002800,
};


#endif
